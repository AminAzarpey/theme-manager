{"version":3,"file":"core.js","sources":["../src/js/core.js"],"sourcesContent":["// core.js\r\n\r\nconst THEME_KEY = \"tm_theme\";\r\nconst PALETTE_KEY = \"tm_palette\";\r\nconst DIRECTION_KEY = \"tm_dir\";\r\n\r\nlet currentTheme;\r\nlet currentPalette;\r\nlet currentDirection;\r\nlet baseHref = \"dist\"; // default path\r\nconst themeLinkId = \"theme-css\";\r\n\r\n/**\r\n * Resolve initial configuration from localStorage, user config, or system defaults.\r\n * @param {ThemeConfig} config\r\n */\r\nfunction resolveInitialConfig(config = {}) {\r\n    currentTheme =\r\n        (!config.ignoreStorage && localStorage.getItem(THEME_KEY)) ||\r\n        config.theme ||\r\n        (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');\r\n\r\n    currentPalette =\r\n        (!config.ignoreStorage && localStorage.getItem(PALETTE_KEY)) ||\r\n        config.palette ||\r\n        \"default\";\r\n\r\n    currentDirection =\r\n        (!config.ignoreStorage && localStorage.getItem(DIRECTION_KEY)) ||\r\n        config.direction ||\r\n        \"ltr\";\r\n\r\n    baseHref = config.baseHref || baseHref;\r\n}\r\n\r\n/**\r\n * Apply the theme CSS file based on the current configuration.\r\n */\r\nfunction applyCssFile() {\r\n    const fileName = `theme-${currentTheme}.${currentPalette}${currentDirection === 'rtl' ? '.rtl' : '.ltr'}.css`;\r\n    const href = `${baseHref}/${fileName}`;\r\n    const linkTag = document.getElementById(themeLinkId);\r\n\r\n    document.body.className = `theme-${currentTheme} palette-${currentPalette}`;\r\n    document.documentElement.setAttribute(\"dir\", currentDirection);\r\n\r\n    if (linkTag) {\r\n        linkTag.setAttribute(\"href\", href);\r\n    } else {\r\n        const link = document.createElement(\"link\");\r\n        link.id = themeLinkId;\r\n        link.rel = \"stylesheet\";\r\n        link.href = href;\r\n        document.head.appendChild(link);\r\n    }\r\n}\r\n\r\n/**\r\n * Initialize the theme system with optional configuration.\r\n * @param {ThemeConfig} config\r\n */\r\nexport function initThemeSystem(config = {}) {\r\n    resolveInitialConfig(config);\r\n    applyCssFile();\r\n}\r\n\r\n/**\r\n * Toggle between 'light' and 'dark' themes.\r\n */\r\nexport function toggleTheme() {\r\n    const next = currentTheme === \"light\" ? \"dark\" : \"light\";\r\n    setTheme(next);\r\n}\r\n\r\n/**\r\n * Set a new theme manually.\r\n * @param {string} theme\r\n */\r\nexport function setTheme(theme) {\r\n    currentTheme = theme;\r\n    localStorage.setItem(THEME_KEY, theme);\r\n    applyCssFile();\r\n}\r\n\r\n/**\r\n * Apply a new palette.\r\n * @param {string} palette\r\n */\r\nexport function applyPalette(palette) {\r\n    currentPalette = palette;\r\n    localStorage.setItem(PALETTE_KEY, palette);\r\n    applyCssFile();\r\n}\r\n\r\n/**\r\n * Toggle between 'ltr' and 'rtl' directions.\r\n */\r\nexport function toggleDirection() {\r\n    const next = currentDirection === \"ltr\" ? \"rtl\" : \"ltr\";\r\n    setDirection(next);\r\n}\r\n\r\n/**\r\n * Set the text direction manually.\r\n * @param {string} dir\r\n */\r\nexport function setDirection(dir) {\r\n    currentDirection = dir;\r\n    localStorage.setItem(DIRECTION_KEY, dir);\r\n    applyCssFile();\r\n}\r\n\r\n/**\r\n * Reset theme system to defaults and clear local storage.\r\n */\r\nexport function resetThemeSystem() {\r\n    localStorage.removeItem(THEME_KEY);\r\n    localStorage.removeItem(PALETTE_KEY);\r\n    localStorage.removeItem(DIRECTION_KEY);\r\n    initThemeSystem();\r\n}\r\n\r\n/**\r\n * Get current theme configuration.\r\n * @returns {{theme: string, palette: string, direction: string}}\r\n */\r\nexport function getCurrentConfig() {\r\n    return {\r\n        theme: currentTheme,\r\n        palette: currentPalette,\r\n        direction: currentDirection,\r\n    };\r\n}\r\n"],"names":["THEME_KEY","PALETTE_KEY","DIRECTION_KEY","currentTheme","currentPalette","currentDirection","baseHref","themeLinkId","applyCssFile","href","linkTag","document","getElementById","body","className","documentElement","setAttribute","link","createElement","id","rel","head","appendChild","initThemeSystem","config","ignoreStorage","localStorage","getItem","theme","window","matchMedia","matches","palette","direction","resolveInitialConfig","setTheme","setItem","setDirection","dir","removeItem"],"mappings":"mPAEA,MAAMA,EAAY,WACZC,EAAc,aACdC,EAAgB,SAEtB,IAAIC,EACAC,EACAC,EACAC,EAAW,OACf,MAAMC,EAAc,YA4BpB,SAASC,IACL,MACMC,EAAO,GAAGH,KADC,SAASH,KAAgBC,IAAsC,QAArBC,EAA6B,OAAS,eAE3FK,EAAUC,SAASC,eAAeL,GAKxC,GAHAI,SAASE,KAAKC,UAAY,SAASX,aAAwBC,IAC3DO,SAASI,gBAAgBC,aAAa,MAAOX,GAEzCK,EACAA,EAAQM,aAAa,OAAQP,OAC1B,CACH,MAAMQ,EAAON,SAASO,cAAc,QACpCD,EAAKE,GAAKZ,EACVU,EAAKG,IAAM,aACXH,EAAKR,KAAOA,EACZE,SAASU,KAAKC,YAAYL,EAC9B,CACJ,CAMO,SAASM,EAAgBC,EAAS,KA7CzC,SAA8BA,EAAS,IACnCrB,GACMqB,EAAOC,eAAiBC,aAAaC,QAAQ3B,IAC/CwB,EAAOI,QACNC,OAAOC,WAAW,gCAAgCC,QAAU,OAAS,SAE1E3B,GACMoB,EAAOC,eAAiBC,aAAaC,QAAQ1B,IAC/CuB,EAAOQ,SACP,UAEJ3B,GACMmB,EAAOC,eAAiBC,aAAaC,QAAQzB,IAC/CsB,EAAOS,WACP,MAEJ3B,EAAWkB,EAAOlB,UAAYA,CAClC,CA6BI4B,CAAqBV,GACrBhB,GACJ,CAcO,SAAS2B,EAASP,GACrBzB,EAAeyB,EACfF,aAAaU,QAAQpC,EAAW4B,GAChCpB,GACJ,CAwBO,SAAS6B,EAAaC,GACzBjC,EAAmBiC,EACnBZ,aAAaU,QAAQlC,EAAeoC,GACpC9B,GACJ,gBAtBO,SAAsBwB,GACzB5B,EAAiB4B,EACjBN,aAAaU,QAAQnC,EAAa+B,GAClCxB,GACJ,qBAkCO,WACH,MAAO,CACHoB,MAAOzB,EACP6B,QAAS5B,EACT6B,UAAW5B,EAEnB,yCAjBO,WACHqB,aAAaa,WAAWvC,GACxB0B,aAAaa,WAAWtC,GACxByB,aAAaa,WAAWrC,GACxBqB,GACJ,kDAvBO,WAEHc,EADkC,QAArBhC,EAA6B,MAAQ,MAEtD,gBA/BO,WAEH8B,EAD8B,UAAjBhC,EAA2B,OAAS,QAErD"}